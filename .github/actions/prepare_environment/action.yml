name: 'Prepare environment'
description: 'This action contains all the usual steps needed to setup the environment and restore caches when available'

inputs:
  core-token:
    description: 'The iOS core token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Fix-up private Github URLs
      shell: bash
      run: find . -type f \( -name '*.pbxproj' -o -name 'Package.swift' -o -name 'Package.resolved' \) -exec sed -i '' "s/https:\/\/github.com\/${GITHUB_REPOSITORY_OWNER}/https:\/\/${GITHUB_ACCESS_TOKEN}@github.com\/${GITHUB_REPOSITORY_OWNER}/g" {} \;
      env:
        GITHUB_ACCESS_TOKEN: ${{ inputs.core-token }}

    - name: Install pip modules
      shell: bash
      run: |
        python3 -m pip install virtualenv

    - name: Install gems
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
        bundler-cache: true

    - name: Install npm
      uses: bahmutov/npm-install@v1

    - name: Restore SPM Cache
      id: restore-spm-cache
      uses: actions/cache/restore@v3
      with:
        path: SourcePackages/
        key: ${{ runner.os }}-spm-cache-${{ hashFiles('Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}

    - name: Install SPM if cache not found
      shell: bash
      if: steps.restore-spm-cache.outputs.cache-hit == 'false'
      run: bundle exec fastlane spm build_path:"SourcePackages/"

    - name: Save SPM Cache if needed
      if: steps.restore-spm-cache.outputs.cache-hit == 'false'
      uses: actions/cache/save@v3
      with:
        path: SourcePackages/
        key: ${{ runner.os }}-spm-cache-${{ hashFiles('Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}  

    - name: Restore Content Blocker Cache
      id: restore-content-blocker-cache
      uses: actions/cache/restore@v3
      with:
        path: |
            content-blocker-lib-ios/
            shavar-prod-lists/
            Client/Assets/AllFramesAtDocument*.js
            Client/Assets/MainFrameAtDocument*.js
            Client/Assets/*.js.LICENSE.txt
        key: ${{ runner.os }}-content-blocker-cache-${{ hashFiles('content_blocker_commit_sha.txt') }}

    - name: Run content blocker scripts if cache not found
      shell: bash
      if: steps.restore-content-blocker-cache.outputs.cache-hit == 'false'
      run: ./content_blocker_update.sh

    - name: Save Content Blocker Cache if new
      if: steps.restore-content-blocker-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: |
            content-blocker-lib-ios/
            shavar-prod-lists/
            Client/Assets/AllFramesAtDocument*.js
            Client/Assets/MainFrameAtDocument*.js
            Client/Assets/*.js.LICENSE.txt
        key: ${{ runner.os }}-content-blocker-cache-${{ hashFiles('content_blocker_commit_sha.txt') }}

    - name: Restore derived data Cache
      uses: ./.github/actions/restore_derived_data

    - name: Create empty Staging xcconfig
      shell: bash
      run: touch Client/Configuration/Staging.xcconfig

    - name: Update Xcodebuild settings
      shell: bash
      run: |
        defaults write com.apple.dt.xcodebuild IgnoreFileSystemDeviceInodeChanges -bool YES
        defaults write com.apple.dt.xcodebuild PBXNumberOfParallelBuildSubtasks 8
        defaults write com.apple.dt.xcodebuild IDEBuildOperationMaxNumberOfConcurrentCompileTasks 8
        defaults write com.apple.dt.xcodebuild BuildSystemScheduleInherentlyParallelCommandsExclusively -bool YES

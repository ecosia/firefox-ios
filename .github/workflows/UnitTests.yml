name: UnitTests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: carthage workaround
      run: ./carthage_config.sh
    - name: "Carthage Bootstrap"
      uses: devbotsxyz/carthage-bootstrap@main
      env: 
        XCODE_XCCONFIG_FILE: ${{ env.xcode_xcconfig_file }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        platform: ios
    - name: Restore ruby gem cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-gem-
    - name: Install
      run: bundle check || bundle install
    - name: Clean Packages
      run: xcodebuild -scheme Ecosia -project Client.xcodeproj clean
    - name: install node modules
      run: npm install
    - name: run node modules
      run: npm run build
    - name: clone translations
      run: git clone https://github.com/mozilla-mobile/ios-l10n-scripts.git || exit 1
    - name: import locales
      run: ./ios-l10n-scripts/import-locales-firefox.sh --release
    - name: setup content blocking scripts
      run: (cd content-blocker-lib-ios/ContentBlockerGen && swift run)
    - name: Run unit tests
      run: bundle exec fastlane scan

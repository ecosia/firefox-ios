name: UnitTests

on:
  push:
    branches: [ main, main-39 ]
  pull_request:
    branches: [ main, main-39 ]

jobs:
  test:
    runs-on: macos-11
    env:
      DEVELOPER_DIR: /Applications/Xcode_13.0.0.app/Contents/Developer

    steps:
    - uses: actions/checkout@v2
    - name: install pip modules
      run: |
         python3 -m pip install virtualenv
    - name: install gems
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
        bundler-cache: true
    - uses: bahmutov/npm-install@v1.6.0
    - run: npm run build
    - name: restore carthage cache 
      uses: actions/cache@v2
      id: cache-carthage
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
    - name: bootstrap apllication services 
      uses: olejnjak/carthage-workaround@v3
      if: steps.cache-carthage.outputs.cache-hit != 'true'
      with:
        action: bootstrap application-services --platform iOS --cache-builds
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: fix up private Github URLs
      run: find . -type f \( -name '*.pbxproj' -o -name 'Package.swift' -o -name 'Package.resolved' \) -exec sed -i '' "s/https:\/\/github.com\/${GITHUB_REPOSITORY_OWNER}/https:\/\/${GITHUB_ACCESS_TOKEN}@github.com\/${GITHUB_REPOSITORY_OWNER}/g" {} \;
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.IOS_CORE_TOKEN }}
    - name: clean packages
      run: xcodebuild -scheme Ecosia -project Client.xcodeproj clean
    - name: setup content blocking scripts
      run: (cd content-blocker-lib-ios/ContentBlockerGen && swift run)
    - name: run unit tests
      run: bundle exec fastlane scan
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v2
      with:
        report_paths: '**/test_output/xml/report.junit'
        github_token: ${{ secrets.GITHUB_TOKEN }}

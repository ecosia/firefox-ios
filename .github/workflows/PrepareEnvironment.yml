name: Prepare environment

on:
    workflow_call:
        inputs:
            developer-dir:
                required: true
                type: string

jobs:
  prepare_environment:
    runs-on: macos-latest
    name: Prepare environment
    env:
      DEVELOPER_DIR: ${{ inputs.developer-dir }}

    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Fix-up private Github URLs
          run: find . -type f \( -name '*.pbxproj' -o -name 'Package.swift' -o -name 'Package.resolved' \) -exec sed -i '' "s/https:\/\/github.com\/${GITHUB_REPOSITORY_OWNER}/https:\/\/${GITHUB_ACCESS_TOKEN}@github.com\/${GITHUB_REPOSITORY_OWNER}/g" {} \;
          env:
            GITHUB_ACCESS_TOKEN: ${{ secrets.IOS_CORE_TOKEN }}

        - name: Install pip modules
          run: |
            python3 -m pip install virtualenv

        - name: Install gems
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 2.7
            bundler-cache: true

        - name: Install npm
          uses: bahmutov/npm-install@v1

        - name: Restore SPM Cache
          id: restore-spm-cache
          uses: actions/cache/restore@v3
          with:
            path: SourcePackages/
            key: ${{ runner.os }}-spm-cache-${{ hashFiles('Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}

        - name: Install SPM if cache not found
          if: steps.restore-spm-cache.outputs.cache-hit == 'false'
          run: bundle exec fastlane spm build_path:"SourcePackages/"

        - name: Restore Content Blocker Cache
          id: restore-content-blocker-cache
          uses: actions/cache/restore@v3
          with:
            path: |
                content-blocker-lib-ios/
                shavar-prod-lists/
                Client/Assets/AllFramesAtDocument*.js
                Client/Assets/MainFrameAtDocument*.js
                Client/Assets/*.js.LICENSE.txt
            key: ${{ runner.os }}-content-blocker-cache-${{ hashFiles('content_blocker_commit_sha.txt') }}

        - name: Run content blocker scripts if cache not found
          if: steps.restore-content-blocker-cache.outputs.cache-hit == 'false'
          run: ./content_blocker_update.sh

        - name: Save Content Blocker Cache if new
          if: steps.restore-content-blocker-cache.outputs.cache-hit != 'true'
          uses: actions/cache/save@v3
          with:
            path: |
                content-blocker-lib-ios/
                shavar-prod-lists/
                Client/Assets/AllFramesAtDocument*.js
                Client/Assets/MainFrameAtDocument*.js
                Client/Assets/*.js.LICENSE.txt
            key: ${{ runner.os }}-content-blocker-cache-${{ hashFiles('content_blocker_commit_sha.txt') }}

        - name: Retrive derived data path from txt file
          uses: actions/download-artifact@master
          with:
            name: derived_data_path
            path: /var/tmp/

        - name: Get derived data path from txt file
          id: get_derived_data_path
          run: echo ::set-output name=derived_data_path_from_file::$(cat /var/tmp/derived_data_path.txt)

        - name: Restore derived data Cache
          id: restore-derived-data-cache
          uses: actions/cache/restore@v3
          with:
            path: ${{ steps.get_derived_data_path.outputs.derived_data_path_from_file }}
            key: ${{ runner.os }}-derived-data-cache-${{ github.run_id }}
            fail-on-cache-miss: true

        - name: Create empty Staging xcconfig
          run: touch Client/Configuration/Staging.xcconfig

        - name: Update Xcodebuild settings
          run: |
            defaults write com.apple.dt.xcodebuild IgnoreFileSystemDeviceInodeChanges -bool YES
            defaults write com.apple.dt.xcodebuild PBXNumberOfParallelBuildSubtasks 8
            defaults write com.apple.dt.xcodebuild IDEBuildOperationMaxNumberOfConcurrentCompileTasks 8
            defaults write com.apple.dt.xcodebuild BuildSystemScheduleInherentlyParallelCommandsExclusively -bool YES

version: 2

jobs:
  build-testflight-deploy:
    environment:
      CI: true
    macos:
      xcode: "13.0.0"
    steps:
      - checkout
      - run:
          name: bootstrap MOZ App Services
          command: ./carthage_bootstrap_moz_services.sh
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: verify github
          command: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
      - run:
          name: clean packages
          command: xcodebuild -scheme Ecosia -project Client.xcodeproj clean
      - run:
          name: npm install
          command: npm install 
      - run:
          name: npm run build
          command: npm run build
      - run:
          name: setup content blocking scripts
          command: (cd content-blocker-lib-ios/ContentBlockerGen && swift run)
      - run:
          name: Build and deploy to Testflight
          command: bundle exec fastlane testflight_live

  build-testflight-deploy-beta:
    environment:
      CI: true
    macos:
      xcode: "13.0.0"
    steps:
      - checkout
      - run:
          name: bootstrap MOZ App Services
          command: ./carthage_bootstrap_moz_services.sh
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: verify github
          command: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
      - run:
          name: clean packages
          command: xcodebuild -scheme Ecosia -project Client.xcodeproj clean
      - run:
          name: npm install
          command: npm install 
      - run:
          name: npm run build
          command: npm run build
      - run:
          name: setup content blocking scripts
          command: (cd content-blocker-lib-ios/ContentBlockerGen && swift run)
      - run:
          name: Build and deploy to Testflight
          command: bundle exec fastlane testflight_beta

  build-appcenter-deploy:
    environment:
      CI: true
    macos:
      xcode: "13.0.0"
    steps:
      - checkout
      - run:
          name: bootstrap MOZ App Services
          command: ./carthage_bootstrap_moz_services.sh
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: verify github
          command: for ip in $(dig @8.8.8.8 github.com +short); do ssh-keyscan github.com,$ip; ssh-keyscan $ip; done 2>/dev/null >> ~/.ssh/known_hosts
      - run:
          name: clean packages
          command: xcodebuild -scheme Ecosia -project Client.xcodeproj clean
      - run:
          name: npm install
          command: npm install 
      - run:
          name: npm run build
          command: npm run build
      - run:
          name: setup content blocking scripts
          command: (cd content-blocker-lib-ios/ContentBlockerGen && swift run)
      - run:
          name: Build and deploy to AppCenter
          command: bundle exec fastlane appcenter

workflows:
  version: 2

  build-testflight-deploy:
    jobs:
      - build-testflight-deploy:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-testflight-deploy-beta:
          filters:
            tags:
              only: /^beta.*/
            branches:
              ignore: /.*/

  
  build-appcenter-deploy:
    jobs:
      - build-appcenter-deploy:
          filters:
            branches:
              only: 
                - /^.*main.*/
                                